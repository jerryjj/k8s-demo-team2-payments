// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payments.proto

/*
Package payments is a generated protocol buffer package.

It is generated from these files:
	payments.proto

It has these top-level messages:
	GetPSPStatusRequest
	GetPSPStatusResponse
*/
package payments

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Status of an operation; included in a Response
type Status int32

const (
	Status_OK    Status = 0
	Status_ERROR Status = 1
)

var Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetPSPStatusRequest struct {
}

func (m *GetPSPStatusRequest) Reset()                    { *m = GetPSPStatusRequest{} }
func (m *GetPSPStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPSPStatusRequest) ProtoMessage()               {}
func (*GetPSPStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetPSPStatusResponse struct {
	Status Status `protobuf:"varint,1,opt,name=status,enum=fi.qvik.payments.Status" json:"status,omitempty"`
	// Response status message
	StatusMessage string `protobuf:"bytes,2,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
}

func (m *GetPSPStatusResponse) Reset()                    { *m = GetPSPStatusResponse{} }
func (m *GetPSPStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPSPStatusResponse) ProtoMessage()               {}
func (*GetPSPStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetPSPStatusResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func (m *GetPSPStatusResponse) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPSPStatusRequest)(nil), "fi.qvik.payments.GetPSPStatusRequest")
	proto.RegisterType((*GetPSPStatusResponse)(nil), "fi.qvik.payments.GetPSPStatusResponse")
	proto.RegisterEnum("fi.qvik.payments.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Payments service

type PaymentsClient interface {
	// Returns available payment cards
	GetPSPStatus(ctx context.Context, in *GetPSPStatusRequest, opts ...grpc.CallOption) (*GetPSPStatusResponse, error)
}

type paymentsClient struct {
	cc *grpc.ClientConn
}

func NewPaymentsClient(cc *grpc.ClientConn) PaymentsClient {
	return &paymentsClient{cc}
}

func (c *paymentsClient) GetPSPStatus(ctx context.Context, in *GetPSPStatusRequest, opts ...grpc.CallOption) (*GetPSPStatusResponse, error) {
	out := new(GetPSPStatusResponse)
	err := grpc.Invoke(ctx, "/fi.qvik.payments.Payments/GetPSPStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Payments service

type PaymentsServer interface {
	// Returns available payment cards
	GetPSPStatus(context.Context, *GetPSPStatusRequest) (*GetPSPStatusResponse, error)
}

func RegisterPaymentsServer(s *grpc.Server, srv PaymentsServer) {
	s.RegisterService(&_Payments_serviceDesc, srv)
}

func _Payments_GetPSPStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPSPStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentsServer).GetPSPStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fi.qvik.payments.Payments/GetPSPStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentsServer).GetPSPStatus(ctx, req.(*GetPSPStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Payments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fi.qvik.payments.Payments",
	HandlerType: (*PaymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPSPStatus",
			Handler:    _Payments_GetPSPStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payments.proto",
}

func init() { proto.RegisterFile("payments.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x48, 0xac, 0xcc,
	0x4d, 0xcd, 0x2b, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x48, 0xcb, 0xd4, 0x2b,
	0x2c, 0xcb, 0xcc, 0xd6, 0x83, 0x89, 0x2b, 0x89, 0x72, 0x09, 0xbb, 0xa7, 0x96, 0x04, 0x04, 0x07,
	0x04, 0x97, 0x24, 0x96, 0x94, 0x16, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0xe5, 0x73,
	0x89, 0xa0, 0x0a, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x19, 0x70, 0xb1, 0x15, 0x83, 0x45,
	0x24, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0x24, 0xf4, 0xd0, 0x4d, 0xd4, 0x83, 0xea, 0x80, 0xaa,
	0x13, 0x52, 0xe5, 0xe2, 0x83, 0xb0, 0xe2, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x25, 0x98,
	0x14, 0x18, 0x35, 0x38, 0x83, 0x78, 0x21, 0xa2, 0xbe, 0x10, 0x41, 0x2d, 0x69, 0x2e, 0x36, 0x88,
	0x46, 0x21, 0x36, 0x2e, 0x26, 0x7f, 0x6f, 0x01, 0x06, 0x21, 0x4e, 0x2e, 0x56, 0xd7, 0xa0, 0x20,
	0xff, 0x20, 0x01, 0x46, 0xa3, 0x6c, 0x2e, 0x8e, 0x00, 0xa8, 0xf1, 0x42, 0xf1, 0x5c, 0x3c, 0xc8,
	0x2e, 0x13, 0x52, 0xc5, 0x74, 0x01, 0x16, 0x0f, 0x49, 0xa9, 0x11, 0x52, 0x06, 0xf1, 0xa0, 0x12,
	0x83, 0x93, 0x74, 0x94, 0x24, 0x58, 0x5d, 0x5a, 0xa6, 0x3e, 0x4c, 0xa9, 0x35, 0x8c, 0x91, 0xc4,
	0x06, 0x0e, 0x47, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0x39, 0x99, 0x82, 0x59, 0x01,
	0x00, 0x00,
}
